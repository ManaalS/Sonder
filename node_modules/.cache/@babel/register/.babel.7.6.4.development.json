{
  "{\"sourceRoot\":\"/Users/ruqiamohammad/my-project/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/ruqiamohammad/my-project\",\"filename\":\"/Users/ruqiamohammad/my-project/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/ruqiamohammad/my-project\",\"plugins\":[],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/ruqiamohammad/my-project/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/ruqiamohammad/my-project",
      "filename": "/Users/ruqiamohammad/my-project/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/ruqiamohammad/my-project",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/ruqiamohammad/my-project/src/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/ruqiamohammad/my-project/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/ruqiamohammad/my-project/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst app = express(); // respond with \"hello world\" when a GET request is made to the homepage\n\napp.get('/', function (req, res) {\n  res.send('hello world');\n});\napp.listen(3000, () => console.log('Example app listening on port 3000!'));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwiYXBwIiwiZ2V0IiwicmVxIiwicmVzIiwic2VuZCIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsTUFBTUMsR0FBRyxHQUFHRixPQUFPLEVBQW5CLEMsQ0FFQTs7QUFDQUUsR0FBRyxDQUFDQyxHQUFKLENBQVEsR0FBUixFQUFhLFVBQVVDLEdBQVYsRUFBZUMsR0FBZixFQUFvQjtBQUMvQkEsRUFBQUEsR0FBRyxDQUFDQyxJQUFKLENBQVMsYUFBVDtBQUNELENBRkQ7QUFLQUosR0FBRyxDQUFDSyxNQUFKLENBQVcsSUFBWCxFQUFpQixNQUFNQyxPQUFPLENBQUNDLEdBQVIsQ0FBWSxxQ0FBWixDQUF2QiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvcnVxaWFtb2hhbW1hZC9teS1wcm9qZWN0L3NyYyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJylcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKVxuXG4vLyByZXNwb25kIHdpdGggXCJoZWxsbyB3b3JsZFwiIHdoZW4gYSBHRVQgcmVxdWVzdCBpcyBtYWRlIHRvIHRoZSBob21lcGFnZVxuYXBwLmdldCgnLycsIGZ1bmN0aW9uIChyZXEsIHJlcykge1xuICByZXMuc2VuZCgnaGVsbG8gd29ybGQnKVxufSlcblxuXG5hcHAubGlzdGVuKDMwMDAsICgpID0+IGNvbnNvbGUubG9nKCdFeGFtcGxlIGFwcCBsaXN0ZW5pbmcgb24gcG9ydCAzMDAwIScpKVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "require",
        "app",
        "get",
        "req",
        "res",
        "send",
        "listen",
        "console",
        "log"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,GAAG,GAAGF,OAAO,EAAnB,C,CAEA;;AACAE,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAa,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAC/BA,EAAAA,GAAG,CAACC,IAAJ,CAAS,aAAT;AACD,CAFD;AAKAJ,GAAG,CAACK,MAAJ,CAAW,IAAX,EAAiB,MAAMC,OAAO,CAACC,GAAR,CAAY,qCAAZ,CAAvB",
      "sourceRoot": "/Users/ruqiamohammad/my-project/src",
      "sourcesContent": [
        "const express = require('express')\nconst app = express()\n\n// respond with \"hello world\" when a GET request is made to the homepage\napp.get('/', function (req, res) {\n  res.send('hello world')\n})\n\n\napp.listen(3000, () => console.log('Example app listening on port 3000!'))\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1572115750694
  },
  "{\"sourceRoot\":\"/Users/ruqiamohammad/my-project/Cal-Hacks-Self-Care-app/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/ruqiamohammad/my-project/Cal-Hacks-Self-Care-app\",\"filename\":\"/Users/ruqiamohammad/my-project/Cal-Hacks-Self-Care-app/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/ruqiamohammad/my-project/Cal-Hacks-Self-Care-app\",\"plugins\":[],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/ruqiamohammad/my-project/Cal-Hacks-Self-Care-app/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/ruqiamohammad/my-project/Cal-Hacks-Self-Care-app",
      "filename": "/Users/ruqiamohammad/my-project/Cal-Hacks-Self-Care-app/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/ruqiamohammad/my-project/Cal-Hacks-Self-Care-app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/ruqiamohammad/my-project/Cal-Hacks-Self-Care-app/src/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/ruqiamohammad/my-project/Cal-Hacks-Self-Care-app/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/ruqiamohammad/my-project/Cal-Hacks-Self-Care-app/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst path = require('path');\n\nconst app = express();\n\nconst mongoose = require(\"mongoose\");\n\nconst bodyParser = require(\"body-parser\");\n\nconst logger = require(\"morgan\");\n\nconst JournalData = require(\"./journal-data\");\n\nconst router = express.Router(); // const MongoClient = require('mongodb').MongoClient;\n// const uri = \"mongodb+srv://ruqiam:flower510@cluster0-orxel.gcp.mongodb.net/journal?retryWrites=true&w=majority\";\n// const client = new MongoClient(uri, { useNewUrlParser:true, useUnifiedTopology: true });\n// this is our MongoDB database\n\nconst dbRoute = \"mongodb+srv://ruqiam:flower510@cluster0-orxel.gcp.mongodb.net/journal?retryWrites=true&w=majority\"; // connects our back end code with the database\n\nmongoose.connect(dbRoute, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\nlet db = mongoose.connection;\ndb.once(\"open\", () => console.log(\"connected to the database\")); // checks if connection with the database is successful\n\ndb.on(\"error\", console.error.bind(console, \"MongoDB connection error:\"));\napp.use(bodyParser.urlencoded({\n  extended: false\n}));\napp.use(bodyParser.json()); // this method adds new data in our database\n\nrouter.post(\"/logJournal\", (req, res) => {\n  let journalData = new JournalData(); // console.log(req.body);\n\n  const {\n    name,\n    thought1,\n    thought2,\n    thought3,\n    thought4,\n    t1,\n    t2,\n    t3,\n    t4,\n    reflections\n  } = req.body; // if ((!id && id !== 0)) {\n  //   return res.json({\n  //     success: false,\n  //     error: \"INVALID INPUTS\"\n  //   });\n  // }\n  //sessionData.id = id\n\n  journalData.name = name;\n  journalData.thought1 = thought1;\n  journalData.thought2 = thought2;\n  journalData.thought3 = thought3;\n  journalData.thought4 = thought4;\n  journalData.t1 = t1;\n  journalData.t2 = t2;\n  journalData.t3 = t3;\n  journalData.t4 = t4;\n  journalData.reflections = reflections; // client.connect(err => {\n  // const collection = client.db(\"journal\").collection(\"collectionj\");\n  // perform actions on the collection object\n\n  journalData.save(err => {\n    if (err) {\n      console.log(err);\n      return res.json({\n        success: false,\n        error: err\n      });\n    }\n\n    return res.json({\n      success: true\n    });\n  }); //   client.close();\n  // });\n});\nrouter.get(\"/getJournals\", (req, res) => {\n  const person = req.query.name;\n  JournalData.find({\n    name: person\n  }, function (err, obj) {\n    if (err) {\n      console.log(\"Error \", err);\n      return res.send(err);\n    }\n\n    return res.json({\n      success: true,\n      data: obj\n    });\n  });\n}); // respond with \"hello world\" when a GET request is made to the homepage\n\napp.get('/', function (req, res) {\n  res.sendFile(path.join(__dirname + '/page.html'));\n});\napp.use(\"/api\", router);\napp.listen(3000, () => console.log('Example app listening on port 3000!'));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "require",
        "path",
        "app",
        "mongoose",
        "bodyParser",
        "logger",
        "JournalData",
        "router",
        "Router",
        "dbRoute",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "db",
        "connection",
        "once",
        "console",
        "log",
        "on",
        "error",
        "bind",
        "use",
        "urlencoded",
        "extended",
        "json",
        "post",
        "req",
        "res",
        "journalData",
        "name",
        "thought1",
        "thought2",
        "thought3",
        "thought4",
        "t1",
        "t2",
        "t3",
        "t4",
        "reflections",
        "body",
        "save",
        "err",
        "success",
        "get",
        "person",
        "query",
        "find",
        "obj",
        "send",
        "data",
        "sendFile",
        "join",
        "__dirname",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/ruqiamohammad/my-project/Cal-Hacks-Self-Care-app/src",
      "sourcesContent": [
        "const express = require('express');\nconst path = require('path');\nconst app = express();\nconst mongoose = require(\"mongoose\");\nconst bodyParser = require(\"body-parser\");\nconst logger = require(\"morgan\");\nconst JournalData = require(\"./journal-data\")\nconst router = express.Router();\n\n\n// const MongoClient = require('mongodb').MongoClient;\n// const uri = \"mongodb+srv://ruqiam:flower510@cluster0-orxel.gcp.mongodb.net/journal?retryWrites=true&w=majority\";\n// const client = new MongoClient(uri, { useNewUrlParser:true, useUnifiedTopology: true });\n\n// this is our MongoDB database\nconst dbRoute = \"mongodb+srv://ruqiam:flower510@cluster0-orxel.gcp.mongodb.net/journal?retryWrites=true&w=majority\";\n// connects our back end code with the database\nmongoose.connect(\n dbRoute,\n { useNewUrlParser: true\n , useUnifiedTopology: true  }\n);\nlet db = mongoose.connection;\ndb.once(\"open\", () => console.log(\"connected to the database\"));\n// checks if connection with the database is successful\ndb.on(\"error\", console.error.bind(console, \"MongoDB connection error:\"));\n\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(bodyParser.json());\n\n// this method adds new data in our database\nrouter.post(\"/logJournal\", (req, res) => {\n\n let journalData = new JournalData();\n// console.log(req.body);\n\n const { name, thought1, thought2, thought3, thought4, t1, t2, t3, t4, reflections } = req.body;\n // if ((!id && id !== 0)) {\n //   return res.json({\n //     success: false,\n //     error: \"INVALID INPUTS\"\n //   });\n // }\n //sessionData.id = id\n journalData.name = name;\n journalData.thought1 = thought1;\n journalData.thought2 = thought2;\n journalData.thought3 = thought3;\n journalData.thought4 = thought4;\n journalData.t1 = t1;\n journalData.t2 = t2;\n journalData.t3 = t3;\n journalData.t4 = t4;\n journalData.reflections = reflections;\n\n // client.connect(err => {\n   // const collection = client.db(\"journal\").collection(\"collectionj\");\n   // perform actions on the collection object\n\n     journalData.save(err => {\n       if (err) {\n         console.log(err);\n         return res.json({ success: false, error: err });\n       }\n       return res.json({ success: true });\n     });\n\n //   client.close();\n // });\n});\n\nrouter.get(\"/getJournals\", (req, res) => {\n const person = req.query.name;\n JournalData.find( {name: person }, function(err,obj) {\n   if (err) {\n     console.log(\"Error \", err);\n     return res.send(err);\n   }\n   return res.json({ success: true, data: obj });\n });\n});\n\n\n// respond with \"hello world\" when a GET request is made to the homepage\napp.get('/', function (req, res) {\n  res.sendFile(path.join(__dirname + '/page.html'));\n})\n\napp.use(\"/api\", router);\n\napp.listen(3000, () => console.log('Example app listening on port 3000!'))\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1572134939815
  },
  "{\"sourceRoot\":\"/Users/ruqiamohammad/my-project/Cal-Hacks-Self-Care-app/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/ruqiamohammad/my-project/Cal-Hacks-Self-Care-app\",\"filename\":\"/Users/ruqiamohammad/my-project/Cal-Hacks-Self-Care-app/src/journal-data.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/ruqiamohammad/my-project/Cal-Hacks-Self-Care-app\",\"plugins\":[],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/ruqiamohammad/my-project/Cal-Hacks-Self-Care-app/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/ruqiamohammad/my-project/Cal-Hacks-Self-Care-app",
      "filename": "/Users/ruqiamohammad/my-project/Cal-Hacks-Self-Care-app/src/journal-data.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/ruqiamohammad/my-project/Cal-Hacks-Self-Care-app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/ruqiamohammad/my-project/Cal-Hacks-Self-Care-app/src/journal-data.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/ruqiamohammad/my-project/Cal-Hacks-Self-Care-app/src/journal-data.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/ruqiamohammad/my-project/Cal-Hacks-Self-Care-app/src",
        "sourceFileName": "journal-data.js"
      }
    },
    "ast": null,
    "code": "const mongoose = require(\"mongoose\");\n\nconst autoIncrement = require('mongoose-auto-increment');\n\nconst Schema = mongoose.Schema;\nvar connection = mongoose.createConnection(\"mongodb+srv://ruqiam:flower510@cluster0-orxel.gcp.mongodb.net/journal?retryWrites=true&w=majority\", {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\nautoIncrement.initialize(connection); // this will be our data base's data structure\n\nconst JournalSchema = new Schema({\n  name: String,\n  thought1: String,\n  thought2: String,\n  thought3: String,\n  thought4: String,\n  t1: Boolean,\n  t2: Boolean,\n  t3: Boolean,\n  t4: Boolean,\n  reflections: String,\n  date: Date\n}, {\n  timestamps: true\n});\nJournalSchema.plugin(autoIncrement.plugin, \"JournalData\"); // export the new Schema so we could modify it using Node.js\n\nmodule.exports = mongoose.model(\"JournalData\", JournalSchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpvdXJuYWwtZGF0YS5qcyJdLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJhdXRvSW5jcmVtZW50IiwiU2NoZW1hIiwiY29ubmVjdGlvbiIsImNyZWF0ZUNvbm5lY3Rpb24iLCJ1c2VOZXdVcmxQYXJzZXIiLCJ1c2VVbmlmaWVkVG9wb2xvZ3kiLCJpbml0aWFsaXplIiwiSm91cm5hbFNjaGVtYSIsIm5hbWUiLCJTdHJpbmciLCJ0aG91Z2h0MSIsInRob3VnaHQyIiwidGhvdWdodDMiLCJ0aG91Z2h0NCIsInQxIiwiQm9vbGVhbiIsInQyIiwidDMiLCJ0NCIsInJlZmxlY3Rpb25zIiwiZGF0ZSIsIkRhdGUiLCJ0aW1lc3RhbXBzIiwicGx1Z2luIiwibW9kdWxlIiwiZXhwb3J0cyIsIm1vZGVsIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXhCOztBQUNBLE1BQU1DLGFBQWEsR0FBR0QsT0FBTyxDQUFDLHlCQUFELENBQTdCOztBQUNBLE1BQU1FLE1BQU0sR0FBR0gsUUFBUSxDQUFDRyxNQUF4QjtBQUNBLElBQUlDLFVBQVUsR0FBR0osUUFBUSxDQUFDSyxnQkFBVCxDQUEwQixtR0FBMUIsRUFBK0g7QUFBRUMsRUFBQUEsZUFBZSxFQUFFLElBQW5CO0FBQXlCQyxFQUFBQSxrQkFBa0IsRUFBRTtBQUE3QyxDQUEvSCxDQUFqQjtBQUNBTCxhQUFhLENBQUNNLFVBQWQsQ0FBeUJKLFVBQXpCLEUsQ0FDQTs7QUFDQSxNQUFNSyxhQUFhLEdBQUcsSUFBSU4sTUFBSixDQUNyQjtBQUNFTyxFQUFBQSxJQUFJLEVBQUVDLE1BRFI7QUFFRUMsRUFBQUEsUUFBUSxFQUFFRCxNQUZaO0FBR0VFLEVBQUFBLFFBQVEsRUFBRUYsTUFIWjtBQUlFRyxFQUFBQSxRQUFRLEVBQUVILE1BSlo7QUFLRUksRUFBQUEsUUFBUSxFQUFFSixNQUxaO0FBTUVLLEVBQUFBLEVBQUUsRUFBRUMsT0FOTjtBQU9FQyxFQUFBQSxFQUFFLEVBQUVELE9BUE47QUFRRUUsRUFBQUEsRUFBRSxFQUFFRixPQVJOO0FBU0VHLEVBQUFBLEVBQUUsRUFBRUgsT0FUTjtBQVVFSSxFQUFBQSxXQUFXLEVBQUVWLE1BVmY7QUFXRVcsRUFBQUEsSUFBSSxFQUFFQztBQVhSLENBRHFCLEVBZXJCO0FBQUVDLEVBQUFBLFVBQVUsRUFBRTtBQUFkLENBZnFCLENBQXRCO0FBaUJBZixhQUFhLENBQUNnQixNQUFkLENBQXFCdkIsYUFBYSxDQUFDdUIsTUFBbkMsRUFBMkMsYUFBM0MsRSxDQUNBOztBQUNBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUIzQixRQUFRLENBQUM0QixLQUFULENBQWUsYUFBZixFQUE4Qm5CLGFBQTlCLENBQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9ydXFpYW1vaGFtbWFkL215LXByb2plY3QvQ2FsLUhhY2tzLVNlbGYtQ2FyZS1hcHAvc3JjIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbW9uZ29vc2UgPSByZXF1aXJlKFwibW9uZ29vc2VcIik7XG5jb25zdCBhdXRvSW5jcmVtZW50ID0gcmVxdWlyZSgnbW9uZ29vc2UtYXV0by1pbmNyZW1lbnQnKTtcbmNvbnN0IFNjaGVtYSA9IG1vbmdvb3NlLlNjaGVtYTtcbnZhciBjb25uZWN0aW9uID0gbW9uZ29vc2UuY3JlYXRlQ29ubmVjdGlvbihcIm1vbmdvZGIrc3J2Oi8vcnVxaWFtOmZsb3dlcjUxMEBjbHVzdGVyMC1vcnhlbC5nY3AubW9uZ29kYi5uZXQvam91cm5hbD9yZXRyeVdyaXRlcz10cnVlJnc9bWFqb3JpdHlcIiwgeyB1c2VOZXdVcmxQYXJzZXI6IHRydWUsIHVzZVVuaWZpZWRUb3BvbG9neTogdHJ1ZSB9KTtcbmF1dG9JbmNyZW1lbnQuaW5pdGlhbGl6ZShjb25uZWN0aW9uKTtcbi8vIHRoaXMgd2lsbCBiZSBvdXIgZGF0YSBiYXNlJ3MgZGF0YSBzdHJ1Y3R1cmVcbmNvbnN0IEpvdXJuYWxTY2hlbWEgPSBuZXcgU2NoZW1hKFxuIHtcbiAgIG5hbWU6IFN0cmluZyxcbiAgIHRob3VnaHQxOiBTdHJpbmcsXG4gICB0aG91Z2h0MjogU3RyaW5nLFxuICAgdGhvdWdodDM6IFN0cmluZyxcbiAgIHRob3VnaHQ0OiBTdHJpbmcsXG4gICB0MTogQm9vbGVhbixcbiAgIHQyOiBCb29sZWFuLFxuICAgdDM6IEJvb2xlYW4sXG4gICB0NDogQm9vbGVhbixcbiAgIHJlZmxlY3Rpb25zOiBTdHJpbmcsXG4gICBkYXRlOiBEYXRlXG5cbiB9LFxuIHsgdGltZXN0YW1wczogdHJ1ZSB9XG4pO1xuSm91cm5hbFNjaGVtYS5wbHVnaW4oYXV0b0luY3JlbWVudC5wbHVnaW4sIFwiSm91cm5hbERhdGFcIik7XG4vLyBleHBvcnQgdGhlIG5ldyBTY2hlbWEgc28gd2UgY291bGQgbW9kaWZ5IGl0IHVzaW5nIE5vZGUuanNcbm1vZHVsZS5leHBvcnRzID0gbW9uZ29vc2UubW9kZWwoXCJKb3VybmFsRGF0YVwiLCBKb3VybmFsU2NoZW1hKTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "journal-data.js"
      ],
      "names": [
        "mongoose",
        "require",
        "autoIncrement",
        "Schema",
        "connection",
        "createConnection",
        "useNewUrlParser",
        "useUnifiedTopology",
        "initialize",
        "JournalSchema",
        "name",
        "String",
        "thought1",
        "thought2",
        "thought3",
        "thought4",
        "t1",
        "Boolean",
        "t2",
        "t3",
        "t4",
        "reflections",
        "date",
        "Date",
        "timestamps",
        "plugin",
        "module",
        "exports",
        "model"
      ],
      "mappings": "AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMC,aAAa,GAAGD,OAAO,CAAC,yBAAD,CAA7B;;AACA,MAAME,MAAM,GAAGH,QAAQ,CAACG,MAAxB;AACA,IAAIC,UAAU,GAAGJ,QAAQ,CAACK,gBAAT,CAA0B,mGAA1B,EAA+H;AAAEC,EAAAA,eAAe,EAAE,IAAnB;AAAyBC,EAAAA,kBAAkB,EAAE;AAA7C,CAA/H,CAAjB;AACAL,aAAa,CAACM,UAAd,CAAyBJ,UAAzB,E,CACA;;AACA,MAAMK,aAAa,GAAG,IAAIN,MAAJ,CACrB;AACEO,EAAAA,IAAI,EAAEC,MADR;AAEEC,EAAAA,QAAQ,EAAED,MAFZ;AAGEE,EAAAA,QAAQ,EAAEF,MAHZ;AAIEG,EAAAA,QAAQ,EAAEH,MAJZ;AAKEI,EAAAA,QAAQ,EAAEJ,MALZ;AAMEK,EAAAA,EAAE,EAAEC,OANN;AAOEC,EAAAA,EAAE,EAAED,OAPN;AAQEE,EAAAA,EAAE,EAAEF,OARN;AASEG,EAAAA,EAAE,EAAEH,OATN;AAUEI,EAAAA,WAAW,EAAEV,MAVf;AAWEW,EAAAA,IAAI,EAAEC;AAXR,CADqB,EAerB;AAAEC,EAAAA,UAAU,EAAE;AAAd,CAfqB,CAAtB;AAiBAf,aAAa,CAACgB,MAAd,CAAqBvB,aAAa,CAACuB,MAAnC,EAA2C,aAA3C,E,CACA;;AACAC,MAAM,CAACC,OAAP,GAAiB3B,QAAQ,CAAC4B,KAAT,CAAe,aAAf,EAA8BnB,aAA9B,CAAjB",
      "sourceRoot": "/Users/ruqiamohammad/my-project/Cal-Hacks-Self-Care-app/src",
      "sourcesContent": [
        "const mongoose = require(\"mongoose\");\nconst autoIncrement = require('mongoose-auto-increment');\nconst Schema = mongoose.Schema;\nvar connection = mongoose.createConnection(\"mongodb+srv://ruqiam:flower510@cluster0-orxel.gcp.mongodb.net/journal?retryWrites=true&w=majority\", { useNewUrlParser: true, useUnifiedTopology: true });\nautoIncrement.initialize(connection);\n// this will be our data base's data structure\nconst JournalSchema = new Schema(\n {\n   name: String,\n   thought1: String,\n   thought2: String,\n   thought3: String,\n   thought4: String,\n   t1: Boolean,\n   t2: Boolean,\n   t3: Boolean,\n   t4: Boolean,\n   reflections: String,\n   date: Date\n\n },\n { timestamps: true }\n);\nJournalSchema.plugin(autoIncrement.plugin, \"JournalData\");\n// export the new Schema so we could modify it using Node.js\nmodule.exports = mongoose.model(\"JournalData\", JournalSchema);\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1572134994741
  },
  "{\"sourceRoot\":\"/Users/ruqiamohammad/Desktop/Cal-Hacks-Self-Care-app/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/ruqiamohammad/Desktop/Cal-Hacks-Self-Care-app\",\"filename\":\"/Users/ruqiamohammad/Desktop/Cal-Hacks-Self-Care-app/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/ruqiamohammad/Desktop/Cal-Hacks-Self-Care-app\",\"plugins\":[],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/ruqiamohammad/Desktop/Cal-Hacks-Self-Care-app/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/ruqiamohammad/Desktop/Cal-Hacks-Self-Care-app",
      "filename": "/Users/ruqiamohammad/Desktop/Cal-Hacks-Self-Care-app/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/ruqiamohammad/Desktop/Cal-Hacks-Self-Care-app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/ruqiamohammad/Desktop/Cal-Hacks-Self-Care-app/src/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/ruqiamohammad/Desktop/Cal-Hacks-Self-Care-app/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/ruqiamohammad/Desktop/Cal-Hacks-Self-Care-app/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst path = require('path');\n\nconst app = express();\n\nconst mongoose = require(\"mongoose\");\n\nconst bodyParser = require(\"body-parser\");\n\nconst logger = require(\"morgan\");\n\nconst JournalData = require(\"./journal-data\");\n\nconst router = express.Router(); // const MongoClient = require('mongodb').MongoClient;\n// const uri = \"mongodb+srv://ruqiam:flower510@cluster0-orxel.gcp.mongodb.net/journal?retryWrites=true&w=majority\";\n// const client = new MongoClient(uri, { useNewUrlParser:true, useUnifiedTopology: true });\n// this is our MongoDB database\n\nconst dbRoute = \"mongodb+srv://ruqiam:flower510@cluster0-orxel.gcp.mongodb.net/journal?retryWrites=true&w=majority\"; // connects our back end code with the database\n\nmongoose.connect(dbRoute, {\n  useNewUrlParser: true\n});\nlet db = mongoose.connection;\ndb.once(\"open\", () => console.log(\"connected to the database\")); // checks if connection with the database is successful\n\ndb.on(\"error\", console.error.bind(console, \"MongoDB connection error:\"));\napp.use(bodyParser.urlencoded({\n  extended: false\n}));\napp.use(bodyParser.json()); // this method adds new data in our database\n\nrouter.post(\"/logJournal\", (req, res) => {\n  let journalData = new JournalData(); // console.log(req.body);\n\n  const {\n    name,\n    thought1,\n    thought2,\n    thought3,\n    thought4,\n    t1,\n    t2,\n    t3,\n    t4,\n    reflections\n  } = req.body; // if ((!id && id !== 0)) {\n  //   return res.json({\n  //     success: false,\n  //     error: \"INVALID INPUTS\"\n  //   });\n  // }\n  //sessionData.id = id\n\n  journalData.name = name;\n  journalData.thought1 = thought1;\n  journalData.thought2 = thought2;\n  journalData.thought3 = thought3;\n  journalData.thought4 = thought4;\n  journalData.t1 = t1;\n  journalData.t2 = t2;\n  journalData.t3 = t3;\n  journalData.t4 = t4;\n  journalData.reflections = reflections; // client.connect(err => {\n  // const collection = client.db(\"journal\").collection(\"collectionj\");\n  // perform actions on the collection object\n\n  journalData.save(err => {\n    if (err) {\n      console.log(err);\n      return res.json({\n        success: false,\n        error: err\n      });\n    }\n\n    return res.json({\n      success: true\n    });\n  }); //   client.close();\n  // });\n});\napp.get(\"/api/getJournals\", (req, res) => {\n  const person = req.query.name;\n  JournalData.find({\n    name: person\n  }, function (err, obj) {\n    if (err) {\n      console.log(\"Error \", err);\n      return res.send(err);\n    }\n\n    return res.json({\n      success: true,\n      journals: obj\n    });\n  });\n}); // respond with \"hello world\" when a GET request is made to the homepage\n\napp.get('/', function (req, res) {\n  res.sendFile(__dirname + '/index.html');\n});\napp.get('/style.css', function (req, res) {\n  res.sendFile(path.join(__dirname + '/style.css'));\n});\napp.get('/yuriy-kovalev-nN1HSDtKdlw-unsplash.jpg', function (req, res) {\n  res.sendFile(path.join(__dirname + '/yuriy-kovalev-nN1HSDtKdlw-unsplash.jpg'));\n});\napp.use(\"/api\", router);\napp.listen(3000, () => console.log('Example app listening on port 3000!'));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "require",
        "path",
        "app",
        "mongoose",
        "bodyParser",
        "logger",
        "JournalData",
        "router",
        "Router",
        "dbRoute",
        "connect",
        "useNewUrlParser",
        "db",
        "connection",
        "once",
        "console",
        "log",
        "on",
        "error",
        "bind",
        "use",
        "urlencoded",
        "extended",
        "json",
        "post",
        "req",
        "res",
        "journalData",
        "name",
        "thought1",
        "thought2",
        "thought3",
        "thought4",
        "t1",
        "t2",
        "t3",
        "t4",
        "reflections",
        "body",
        "save",
        "err",
        "success",
        "get",
        "person",
        "query",
        "find",
        "obj",
        "send",
        "journals",
        "sendFile",
        "__dirname",
        "join",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/ruqiamohammad/Desktop/Cal-Hacks-Self-Care-app/src",
      "sourcesContent": [
        "const express = require('express');\nconst path = require('path');\nconst app = express();\nconst mongoose = require(\"mongoose\");\nconst bodyParser = require(\"body-parser\");\nconst logger = require(\"morgan\");\nconst JournalData = require(\"./journal-data\")\nconst router = express.Router();\n\n\n// const MongoClient = require('mongodb').MongoClient;\n// const uri = \"mongodb+srv://ruqiam:flower510@cluster0-orxel.gcp.mongodb.net/journal?retryWrites=true&w=majority\";\n// const client = new MongoClient(uri, { useNewUrlParser:true, useUnifiedTopology: true });\n\n// this is our MongoDB database\nconst dbRoute = \"mongodb+srv://ruqiam:flower510@cluster0-orxel.gcp.mongodb.net/journal?retryWrites=true&w=majority\";\n// connects our back end code with the database\nmongoose.connect(\n dbRoute,\n { useNewUrlParser: true  }\n);\nlet db = mongoose.connection;\ndb.once(\"open\", () => console.log(\"connected to the database\"));\n// checks if connection with the database is successful\ndb.on(\"error\", console.error.bind(console, \"MongoDB connection error:\"));\n\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(bodyParser.json());\n\n// this method adds new data in our database\nrouter.post(\"/logJournal\", (req, res) => {\n\n let journalData = new JournalData();\n// console.log(req.body);\n\n const { name, thought1, thought2, thought3, thought4, t1, t2, t3, t4, reflections } = req.body;\n // if ((!id && id !== 0)) {\n //   return res.json({\n //     success: false,\n //     error: \"INVALID INPUTS\"\n //   });\n // }\n //sessionData.id = id\n journalData.name = name;\n journalData.thought1 = thought1;\n journalData.thought2 = thought2;\n journalData.thought3 = thought3;\n journalData.thought4 = thought4;\n journalData.t1 = t1;\n journalData.t2 = t2;\n journalData.t3 = t3;\n journalData.t4 = t4;\n journalData.reflections = reflections;\n\n // client.connect(err => {\n   // const collection = client.db(\"journal\").collection(\"collectionj\");\n   // perform actions on the collection object\n\n     journalData.save(err => {\n       if (err) {\n         console.log(err);\n         return res.json({ success: false, error: err });\n       }\n       return res.json({ success: true });\n     });\n\n //   client.close();\n // });\n});\n\napp.get(\"/api/getJournals\", (req, res) => {\n const person = req.query.name;\n JournalData.find( {name: person }, function(err,obj) {\n   if (err) {\n     console.log(\"Error \", err);\n     return res.send(err);\n   }\n   return res.json({ success: true, journals: obj });\n });\n});\n\n\n// respond with \"hello world\" when a GET request is made to the homepage\napp.get('/', function (req, res) {\n  res.sendFile(__dirname + '/index.html');\n})\n\napp.get('/style.css', function (req, res) {\n  res.sendFile(path.join(__dirname + '/style.css'));\n})\napp.get('/yuriy-kovalev-nN1HSDtKdlw-unsplash.jpg', function (req, res) {\n  res.sendFile(path.join(__dirname + '/yuriy-kovalev-nN1HSDtKdlw-unsplash.jpg'));\n})\napp.use(\"/api\", router);\n\napp.listen(3000, () => console.log('Example app listening on port 3000!'))\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1572177520133
  },
  "{\"sourceRoot\":\"/Users/ruqiamohammad/Desktop/Cal-Hacks-Self-Care-app/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/ruqiamohammad/Desktop/Cal-Hacks-Self-Care-app\",\"filename\":\"/Users/ruqiamohammad/Desktop/Cal-Hacks-Self-Care-app/src/journal-data.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/ruqiamohammad/Desktop/Cal-Hacks-Self-Care-app\",\"plugins\":[],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/ruqiamohammad/Desktop/Cal-Hacks-Self-Care-app/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/ruqiamohammad/Desktop/Cal-Hacks-Self-Care-app",
      "filename": "/Users/ruqiamohammad/Desktop/Cal-Hacks-Self-Care-app/src/journal-data.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/ruqiamohammad/Desktop/Cal-Hacks-Self-Care-app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/ruqiamohammad/Desktop/Cal-Hacks-Self-Care-app/src/journal-data.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/ruqiamohammad/Desktop/Cal-Hacks-Self-Care-app/src/journal-data.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/ruqiamohammad/Desktop/Cal-Hacks-Self-Care-app/src",
        "sourceFileName": "journal-data.js"
      }
    },
    "ast": null,
    "code": "const mongoose = require(\"mongoose\");\n\nconst autoIncrement = require('mongoose-auto-increment');\n\nconst Schema = mongoose.Schema;\nvar connection = mongoose.createConnection(\"mongodb+srv://ruqiam:flower510@cluster0-orxel.gcp.mongodb.net/journal?retryWrites=true&w=majority\", {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\nautoIncrement.initialize(connection); // this will be our data base's data structure\n\nconst JournalSchema = new Schema({\n  name: String,\n  thought1: String,\n  thought2: String,\n  thought3: String,\n  thought4: String,\n  t1: Boolean,\n  t2: Boolean,\n  t3: Boolean,\n  t4: Boolean,\n  reflections: String,\n  date: Date\n}, {\n  timestamps: true\n});\nJournalSchema.plugin(autoIncrement.plugin, \"JournalData\"); // export the new Schema so we could modify it using Node.js\n\nmodule.exports = mongoose.model(\"JournalData\", JournalSchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpvdXJuYWwtZGF0YS5qcyJdLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJhdXRvSW5jcmVtZW50IiwiU2NoZW1hIiwiY29ubmVjdGlvbiIsImNyZWF0ZUNvbm5lY3Rpb24iLCJ1c2VOZXdVcmxQYXJzZXIiLCJ1c2VVbmlmaWVkVG9wb2xvZ3kiLCJpbml0aWFsaXplIiwiSm91cm5hbFNjaGVtYSIsIm5hbWUiLCJTdHJpbmciLCJ0aG91Z2h0MSIsInRob3VnaHQyIiwidGhvdWdodDMiLCJ0aG91Z2h0NCIsInQxIiwiQm9vbGVhbiIsInQyIiwidDMiLCJ0NCIsInJlZmxlY3Rpb25zIiwiZGF0ZSIsIkRhdGUiLCJ0aW1lc3RhbXBzIiwicGx1Z2luIiwibW9kdWxlIiwiZXhwb3J0cyIsIm1vZGVsIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXhCOztBQUNBLE1BQU1DLGFBQWEsR0FBR0QsT0FBTyxDQUFDLHlCQUFELENBQTdCOztBQUNBLE1BQU1FLE1BQU0sR0FBR0gsUUFBUSxDQUFDRyxNQUF4QjtBQUNBLElBQUlDLFVBQVUsR0FBR0osUUFBUSxDQUFDSyxnQkFBVCxDQUEwQixtR0FBMUIsRUFBK0g7QUFBRUMsRUFBQUEsZUFBZSxFQUFFLElBQW5CO0FBQXlCQyxFQUFBQSxrQkFBa0IsRUFBRTtBQUE3QyxDQUEvSCxDQUFqQjtBQUNBTCxhQUFhLENBQUNNLFVBQWQsQ0FBeUJKLFVBQXpCLEUsQ0FDQTs7QUFDQSxNQUFNSyxhQUFhLEdBQUcsSUFBSU4sTUFBSixDQUNyQjtBQUNFTyxFQUFBQSxJQUFJLEVBQUVDLE1BRFI7QUFFRUMsRUFBQUEsUUFBUSxFQUFFRCxNQUZaO0FBR0VFLEVBQUFBLFFBQVEsRUFBRUYsTUFIWjtBQUlFRyxFQUFBQSxRQUFRLEVBQUVILE1BSlo7QUFLRUksRUFBQUEsUUFBUSxFQUFFSixNQUxaO0FBTUVLLEVBQUFBLEVBQUUsRUFBRUMsT0FOTjtBQU9FQyxFQUFBQSxFQUFFLEVBQUVELE9BUE47QUFRRUUsRUFBQUEsRUFBRSxFQUFFRixPQVJOO0FBU0VHLEVBQUFBLEVBQUUsRUFBRUgsT0FUTjtBQVVFSSxFQUFBQSxXQUFXLEVBQUVWLE1BVmY7QUFXRVcsRUFBQUEsSUFBSSxFQUFFQztBQVhSLENBRHFCLEVBZXJCO0FBQUVDLEVBQUFBLFVBQVUsRUFBRTtBQUFkLENBZnFCLENBQXRCO0FBaUJBZixhQUFhLENBQUNnQixNQUFkLENBQXFCdkIsYUFBYSxDQUFDdUIsTUFBbkMsRUFBMkMsYUFBM0MsRSxDQUNBOztBQUNBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUIzQixRQUFRLENBQUM0QixLQUFULENBQWUsYUFBZixFQUE4Qm5CLGFBQTlCLENBQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9ydXFpYW1vaGFtbWFkL0Rlc2t0b3AvQ2FsLUhhY2tzLVNlbGYtQ2FyZS1hcHAvc3JjIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbW9uZ29vc2UgPSByZXF1aXJlKFwibW9uZ29vc2VcIik7XG5jb25zdCBhdXRvSW5jcmVtZW50ID0gcmVxdWlyZSgnbW9uZ29vc2UtYXV0by1pbmNyZW1lbnQnKTtcbmNvbnN0IFNjaGVtYSA9IG1vbmdvb3NlLlNjaGVtYTtcbnZhciBjb25uZWN0aW9uID0gbW9uZ29vc2UuY3JlYXRlQ29ubmVjdGlvbihcIm1vbmdvZGIrc3J2Oi8vcnVxaWFtOmZsb3dlcjUxMEBjbHVzdGVyMC1vcnhlbC5nY3AubW9uZ29kYi5uZXQvam91cm5hbD9yZXRyeVdyaXRlcz10cnVlJnc9bWFqb3JpdHlcIiwgeyB1c2VOZXdVcmxQYXJzZXI6IHRydWUsIHVzZVVuaWZpZWRUb3BvbG9neTogdHJ1ZSB9KTtcbmF1dG9JbmNyZW1lbnQuaW5pdGlhbGl6ZShjb25uZWN0aW9uKTtcbi8vIHRoaXMgd2lsbCBiZSBvdXIgZGF0YSBiYXNlJ3MgZGF0YSBzdHJ1Y3R1cmVcbmNvbnN0IEpvdXJuYWxTY2hlbWEgPSBuZXcgU2NoZW1hKFxuIHtcbiAgIG5hbWU6IFN0cmluZyxcbiAgIHRob3VnaHQxOiBTdHJpbmcsXG4gICB0aG91Z2h0MjogU3RyaW5nLFxuICAgdGhvdWdodDM6IFN0cmluZyxcbiAgIHRob3VnaHQ0OiBTdHJpbmcsXG4gICB0MTogQm9vbGVhbixcbiAgIHQyOiBCb29sZWFuLFxuICAgdDM6IEJvb2xlYW4sXG4gICB0NDogQm9vbGVhbixcbiAgIHJlZmxlY3Rpb25zOiBTdHJpbmcsXG4gICBkYXRlOiBEYXRlXG5cbiB9LFxuIHsgdGltZXN0YW1wczogdHJ1ZSB9XG4pO1xuSm91cm5hbFNjaGVtYS5wbHVnaW4oYXV0b0luY3JlbWVudC5wbHVnaW4sIFwiSm91cm5hbERhdGFcIik7XG4vLyBleHBvcnQgdGhlIG5ldyBTY2hlbWEgc28gd2UgY291bGQgbW9kaWZ5IGl0IHVzaW5nIE5vZGUuanNcbm1vZHVsZS5leHBvcnRzID0gbW9uZ29vc2UubW9kZWwoXCJKb3VybmFsRGF0YVwiLCBKb3VybmFsU2NoZW1hKTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "journal-data.js"
      ],
      "names": [
        "mongoose",
        "require",
        "autoIncrement",
        "Schema",
        "connection",
        "createConnection",
        "useNewUrlParser",
        "useUnifiedTopology",
        "initialize",
        "JournalSchema",
        "name",
        "String",
        "thought1",
        "thought2",
        "thought3",
        "thought4",
        "t1",
        "Boolean",
        "t2",
        "t3",
        "t4",
        "reflections",
        "date",
        "Date",
        "timestamps",
        "plugin",
        "module",
        "exports",
        "model"
      ],
      "mappings": "AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMC,aAAa,GAAGD,OAAO,CAAC,yBAAD,CAA7B;;AACA,MAAME,MAAM,GAAGH,QAAQ,CAACG,MAAxB;AACA,IAAIC,UAAU,GAAGJ,QAAQ,CAACK,gBAAT,CAA0B,mGAA1B,EAA+H;AAAEC,EAAAA,eAAe,EAAE,IAAnB;AAAyBC,EAAAA,kBAAkB,EAAE;AAA7C,CAA/H,CAAjB;AACAL,aAAa,CAACM,UAAd,CAAyBJ,UAAzB,E,CACA;;AACA,MAAMK,aAAa,GAAG,IAAIN,MAAJ,CACrB;AACEO,EAAAA,IAAI,EAAEC,MADR;AAEEC,EAAAA,QAAQ,EAAED,MAFZ;AAGEE,EAAAA,QAAQ,EAAEF,MAHZ;AAIEG,EAAAA,QAAQ,EAAEH,MAJZ;AAKEI,EAAAA,QAAQ,EAAEJ,MALZ;AAMEK,EAAAA,EAAE,EAAEC,OANN;AAOEC,EAAAA,EAAE,EAAED,OAPN;AAQEE,EAAAA,EAAE,EAAEF,OARN;AASEG,EAAAA,EAAE,EAAEH,OATN;AAUEI,EAAAA,WAAW,EAAEV,MAVf;AAWEW,EAAAA,IAAI,EAAEC;AAXR,CADqB,EAerB;AAAEC,EAAAA,UAAU,EAAE;AAAd,CAfqB,CAAtB;AAiBAf,aAAa,CAACgB,MAAd,CAAqBvB,aAAa,CAACuB,MAAnC,EAA2C,aAA3C,E,CACA;;AACAC,MAAM,CAACC,OAAP,GAAiB3B,QAAQ,CAAC4B,KAAT,CAAe,aAAf,EAA8BnB,aAA9B,CAAjB",
      "sourceRoot": "/Users/ruqiamohammad/Desktop/Cal-Hacks-Self-Care-app/src",
      "sourcesContent": [
        "const mongoose = require(\"mongoose\");\nconst autoIncrement = require('mongoose-auto-increment');\nconst Schema = mongoose.Schema;\nvar connection = mongoose.createConnection(\"mongodb+srv://ruqiam:flower510@cluster0-orxel.gcp.mongodb.net/journal?retryWrites=true&w=majority\", { useNewUrlParser: true, useUnifiedTopology: true });\nautoIncrement.initialize(connection);\n// this will be our data base's data structure\nconst JournalSchema = new Schema(\n {\n   name: String,\n   thought1: String,\n   thought2: String,\n   thought3: String,\n   thought4: String,\n   t1: Boolean,\n   t2: Boolean,\n   t3: Boolean,\n   t4: Boolean,\n   reflections: String,\n   date: Date\n\n },\n { timestamps: true }\n);\nJournalSchema.plugin(autoIncrement.plugin, \"JournalData\");\n// export the new Schema so we could modify it using Node.js\nmodule.exports = mongoose.model(\"JournalData\", JournalSchema);\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1572135951472
  }
}